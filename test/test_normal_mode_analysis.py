# -*- coding: utf-8 -*-
import unittest
import numpy as np
from normal_mode_analysis.normal_mode_analysis import Molecule


class TestNormalModeAnalysis(unittest.TestCase):
    """ Testing functionality of the normal mode analysis
    """


    def setUp(self):
        """ set up tolerance"""

        self.tol = 1e-7
        self.natom = 5
        self.amass = np.array([ 1.00782504, 14.003074  , 12., 1.00782504, 1.00782504])
        self.coords = np.array([[-1.68206589e+00, -2.00208637e+00, -5.55111512e-17],
                                [ 5.67110624e-02, -1.19378280e+00,  0.00000000e+00],
                                [ 5.67110624e-02,  1.18052368e+00, -5.55111512e-17],
                                [ 1.82864451e+00,  2.17268679e+00,  1.11022302e-16],
                                [-1.60979088e+00,  2.35994278e+00, -3.33066907e-16]])
        self.fcm = np.array([[ 3.69842459e-01,  1.63368759e-01, -5.13478149e-16,
                                -3.71543662e-01, -1.78881848e-01,  4.05925293e-16,
                                -5.58350764e-03,  1.72232094e-02,  3.90312782e-17,
                                 2.60484873e-03, -1.61818758e-03,  1.72388145e-17,
                                 4.67986237e-03, -9.19332211e-05,  4.04407410e-17],
                               [ 1.63368759e-01,  1.45518627e-01,  1.00613962e-16,
                                -1.05763647e-01, -1.06864495e-01, -1.33573708e-16,
                                -5.94937993e-02, -3.89423774e-02,  6.15555783e-17,
                                 2.43856824e-03, -3.93493056e-03,  1.32272665e-17,
                                -5.49880899e-04,  4.22317580e-03, -3.55618313e-17],
                               [-5.13478149e-16,  1.00613962e-16,  3.83154330e-02,
                                 5.15212872e-16, -1.52655666e-16, -5.01377670e-02,
                                -6.33174069e-17,  6.09321621e-17,  5.84806459e-03,
                                 2.77555756e-17,  4.33680869e-18,  2.22764497e-02,
                                 1.60461922e-17, -1.38777878e-17, -1.63021803e-02],
                               [-3.71543662e-01, -1.05763647e-01,  5.15212872e-16,
                                 4.88521953e-01,  1.61971889e-01, -8.18789481e-16,
                                -1.36205608e-01, -5.69937715e-02,  3.36536354e-16,
                                 1.04042378e-02, -4.05207484e-02,  6.93889390e-18,
                                 8.82307904e-03,  4.13062779e-02, -4.85722573e-17],
                               [-1.78881848e-01, -1.06864495e-01, -1.52655666e-16,
                                 1.61971889e-01,  9.22591999e-01,  3.33066907e-16,
                                 1.88816578e-02, -7.49119851e-01, -1.11022302e-16,
                                -3.06416624e-03, -3.31157071e-02, -4.85722573e-17,
                                 1.09246705e-03, -3.34919456e-02, -5.03069808e-17],
                               [ 4.05925293e-16, -1.33573708e-16, -5.01377670e-02,
                                -8.18789481e-16,  3.33066907e-16,  8.32017339e-02,
                                 1.73472348e-17,  1.38777878e-17, -6.36260537e-02,
                                 5.11743425e-17,  4.90059382e-17, -1.05530793e-02,
                                 3.38271078e-16, -3.01841885e-16,  4.11151662e-02],
                               [-5.58350764e-03, -5.94937993e-02, -6.33174069e-17,
                                -1.36205608e-01,  1.88816578e-02,  1.73472348e-17,
                                 7.13762779e-01,  3.72184338e-02, -1.16573418e-15,
                                -3.06117471e-01, -1.08737079e-01,  3.53883589e-16,
                                -2.65856193e-01,  1.12130787e-01,  8.88178420e-16],
                               [ 1.72232094e-02, -3.89423774e-02,  6.09321621e-17,
                                -5.69937715e-02, -7.49119851e-01,  1.38777878e-17,
                                 3.72184338e-02,  1.06363025e+00,  6.66133815e-16,
                                -1.18368261e-01, -1.22511262e-01,  5.03069808e-17,
                                 1.20920389e-01, -1.53056756e-01, -8.18789481e-16],
                               [ 3.90312782e-17,  6.15555783e-17,  5.84806459e-03,
                                 3.36536354e-16, -1.11022302e-16, -6.36260537e-02,
                                -1.16573418e-15,  6.66133815e-16,  1.78951120e-01,
                                 2.55004351e-16, -1.21430643e-16, -5.57661311e-02,
                                 5.49907342e-16, -5.23886490e-16, -6.54069998e-02],
                               [ 2.60484873e-03,  2.43856824e-03,  2.77555756e-17,
                                 1.04042378e-02, -3.06416624e-03,  5.11743425e-17,
                                -3.06117471e-01, -1.18368261e-01,  2.55004351e-16,
                                 3.14553645e-01,  1.32719955e-01, -4.09394740e-16,
                                -2.14452605e-02, -1.37260959e-02,  6.23416249e-17],
                               [-1.61818758e-03, -3.93493056e-03,  4.33680869e-18,
                                -4.05207484e-02, -3.31157071e-02,  4.90059382e-17,
                                -1.08737079e-01, -1.22511262e-01, -1.21430643e-16,
                                 1.32719955e-01,  1.49347647e-01,  3.12250226e-17,
                                 1.81560597e-02,  1.02142527e-02,  4.52112306e-17],
                               [ 1.72388145e-17,  1.32272665e-17,  2.22764497e-02,
                                 6.93889390e-18, -4.85722573e-17, -1.05530793e-02,
                                 3.53883589e-16,  5.03069808e-17, -5.57661311e-02,
                                -4.09394740e-16,  3.12250226e-17,  3.26116134e-02,
                                 2.25514052e-17, -4.38017678e-17,  1.14311474e-02],
                               [ 4.67986237e-03, -5.49880899e-04,  1.60461922e-17,
                                 8.82307904e-03,  1.09246705e-03,  3.38271078e-16,
                                -2.65856193e-01,  1.20920389e-01,  5.49907342e-16,
                                -2.14452605e-02,  1.81560597e-02,  2.25514052e-17,
                                 2.73798512e-01, -1.39619035e-01, -9.29811783e-16],
                               [-9.19332211e-05,  4.22317580e-03, -1.38777878e-17,
                                 4.13062779e-02, -3.34919456e-02, -3.01841885e-16,
                                 1.12130787e-01, -1.53056756e-01, -5.23886490e-16,
                                -1.37260959e-02,  1.02142527e-02, -4.38017678e-17,
                                -1.39619035e-01,  1.72111274e-01,  8.46545056e-16],
                               [ 4.04407410e-17, -3.55618313e-17, -1.63021803e-02,
                                -4.85722573e-17, -5.03069808e-17,  4.11151662e-02,
                                 8.88178420e-16, -8.18789481e-16, -6.54069998e-02,
                                 6.23416249e-17,  4.52112306e-17,  1.14311474e-02,
                                -9.29811783e-16,  8.46545056e-16,  2.91628665e-02]])
        self.func = Molecule(self.natom, self.amass, self.coords, self.fcm)
        self.func.mwcart = np.array([[-1.68863418, -2.00990431, -0.],
                                     [ 0.21221666, -4.46721659,  0.],
                                     [ 0.19645288,  4.08945399, -0.],
                                     [ 1.83578518,  2.18117091,  0.],
                                     [-1.61607695,  2.36915811, -0.]])

        self.func.com = np.array([0., 0., 0.])

                                                        
    def test_inertia_tensor(self):
        """ Test function for moment of inertia tensor"""

        
        moi_true = np.array([[51.08978995, 3.42477977,  0.],
                             [3.42477977,  8.91692696, -0.],
                             [ 0., -0., 60.00671691]])
        moi_test = Molecule.get_inertia_tensor(self.func)

        self.assertTrue(np.isclose(moi_true, moi_test, rtol=self.tol).all())

    def test_vibrational_frequencies(self):
        """ Check that harmonic vibrational frequencies are good"""

        self.func.moi = np.array([[51.08978995, 3.42477977,  0.],
                                 [3.42477977,  8.91692696, -0.],
                                 [ 0., -0., 60.00671691]])
        freq_true = np.array([1173.51538795, 1234.37456731, 1285.22314317, 1483.53156401, 1640.91214424, 1848.74470783, 3225.35367222, 3327.25263797, 3575.17979638])
        freq_test, lmwc = self.func.harmonic_vibrational_analysis

        self.assertTrue(np.isclose(freq_true, freq_test, rtol=self.tol).all())

if __name__ == "__main__":
    unittest.main()
